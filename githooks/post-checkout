#!/bin/bash
#
# Enforce convention policies by using post-checkout:
#
# - Enforce the creation of support branches from the base branches.

# -x: print a trace (debug)
# -u: treat unset variables
# -o pipefail: return value of a pipeline
set -uo pipefail

# Include libraries

. ./scripts/utils/log.sh
. ./scripts/utils/fs.sh
. ./scripts/utils/git.sh
. ./scripts/utils/hook.sh

# Constant variables

LOG_FILE="$(git_get_root_dir)/logs/githooks/post-checkout.log"
readonly LOG_FILE
LOCAL_BRANCH="$(git_get_local_branch)"
readonly LOCAL_BRANCH
readonly -a BASE_BRANCHES=(
  main
)
FLAG_CHECKOUT="${3}"
readonly FLAG_CHECKOUT

# Internal functions

run_post_checkout() {
  local -i result=0

  hook_enforce_checkout_from_base_branches "${LOCAL_BRANCH}" "${FLAG_CHECKOUT}" "${BASE_BRANCHES[@]}" &>"${LOG_FILE}"
  ((result = $?))
  if ((result == 1)); then
    log_monitor "githooks" "pre-push" "${result}"

    return "${result}"
  fi

  return "${result}"
}

# Control flow logic

run_post_checkout
exit "${?}"
