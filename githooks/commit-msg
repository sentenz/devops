#!/bin/bash
#
# Enforce commit via commit-msg:
#
# - Enforce commit conventions via commitlint.
# TODO(AK) Perform commit spelling check.

# -x: print a trace (debug)
# -u: treat unset variables
# -o pipefail: return value of a pipeline
set -uo pipefail

# Include libraries

. ./scripts/utils/log.sh
. ./scripts/utils/fs.sh
. ./scripts/utils/git.sh
. ./scripts/utils/hook.sh

# Constant variables

LOG_FILE="$(git_get_root_dir)/logs/githooks/commit-msg.log"
readonly LOG_FILE
COMMIT_MESSAGE_FILE="${1}"
readonly COMMIT_MESSAGE_FILE

# Internal functions

run_commit_msg() {
  local -i result=0

  hook_enforce_commit_message_convention "make run-linter-commit" "${COMMIT_MESSAGE_FILE}" &>"${LOG_FILE}"
  ((result = $?))
  if ((result == 1)); then
    log_monitor "githooks" "pre-push" "${result}"

    return "${result}"
  fi

  return "${result}"
}

# Control flow logic

run_commit_msg
exit "${?}"
